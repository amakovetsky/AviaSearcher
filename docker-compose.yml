version: '3.4'
networks:
  backendapp:
   driver: bridge
services:
  aviasearcher:
    image: ${DOCKER_REGISTRY-}aviasearcher
    build:
      context: .
      dockerfile: AviaSearcher/Dockerfile

    networks:
        - backendapp

  aviadata:
    image: ${DOCKER_REGISTRY-}aviadata
    build:
      context: ..
      dockerfile: AviaData/AviaData/Dockerfile
     
    networks:
        - backendapp

  db:
    image: postgres:latest
  #  pull_policy: always
    container_name: db
    restart: always
    environment: 
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    networks:
     - backendapp

  redis:
    image: 'redis:latest'
    container_name: redis_db_eco
    restart: always
    ports:
      - "6379:6379"
    environment:
      - REDIS_PASSWORD=my-password
      - REDIS_PORT=6379
    networks:
     - backendapp
      
  auth.api:
    image: ${DOCKER_REGISTRY-}authapi
    build:
      context: ../..
      dockerfile: AviaSearcher/Auth.API/Dockerfile
    networks:
        - backendapp

